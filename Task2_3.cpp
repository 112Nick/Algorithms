//2_3: Даны два строго возрастающих массива целых чисел A[0..n) и B[0..m) и число k.
//Найти количество таких пар индексов (i,j), что A[i]+B[j] = k. Время работы O(n+m). 
//Указание: Обходить массив B от начала к концу
//Входные данные: n,m<=1000000, элеметны массивов и число k 
//Выходные данные: число пар

#include <iostream>

int func(int* A, int n, int* B, int m, int k) {
    int count=0;
    int i = 0;
    int j = m - 1;
    while(i < n && j >= 0) {
        //Если сумма чисел получилась больше k, необходимо ее уменьшить, сдинув второй массив "к центру"
        if(A[i] + B[j] > k) {
            j--;
        }
         //Если сумма чисел получилась меньше k, необходимо ее увеличить, сдинув первый массив "к центру"
        else if(A[i] + B[j] < k) {
            i++;
        }
         //Если сумма чисел получилась равна k, необходимо оба массива сдивнуть "к центру", так как все элементы "с краев"
         //проверены
        else {
            count++;
            i++;
            j--;
        }
    }
    return count;
}

int main() {
    int n, m, k, result;
    std::cin >> n;
    int* A = new int[n];
    for(int i = 0; i < n; i++)
        std::cin >> A[i];
    std::cin >> m;
    int* B = new int[m];
    for(int i = 0; i < m; i++)
        std::cin >> B[i];
    std::cin >> k;
    result = func(A, n, B, m, k);
    std::cout << result;
    return 0;
} 
